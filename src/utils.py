import can
import datetime

# Credits to: https://python-can.readthedocs.io/en/master/_modules/can/io/csv.html#CSVReader

class CSVReader(can.io.generic.BaseIOHandler):
    """Iterator over CAN messages from a .csv file that was
    generated by :class:`~can.CSVWriter` or that uses the same
    format as described there. Assumes that there is a header
    and thus skips the first line.

    Any line separator is accepted.
    """

    def __init__(self, file):
        """
        :param file: a path-like object or as file-like object to read from
                     If this is a file-like object, is has to opened in text
                     read mode, not binary read mode.
        """
        super(CSVReader, self).__init__(file, mode='r')

    def __iter__(self):
        # skip the header line
        try:
            next(self.file)
        except StopIteration:
            # don't crash on a file with only a header
            return

        for row,line in enumerate(self.file):

            # Line reading was modified for our format
            timestamp, arbitration_id, extended, remote, error, dlc, data0, data1, data2, data3, data4, data5, data6, data7 = line.split(',')

            date, time = timestamp.split(' ')
            year, month, day = date.split('-')
            hour, minute, seconds = time.split(':')
            seconds = seconds.split('.')

            if len(seconds) == 1:
                seconds.append('000000')

            dt = datetime.datetime(int(year), int(month), int(day), int(hour), int(minute), int(seconds[0]), int(seconds[1]))
            data_temp = [data0 , data1, data2, data3, data4, data5, data6, data7.rstrip('\n')]

            data = []
            for i in range(len(data_temp)):
                if data_temp[i] != '':
                    data.append(int(data_temp[i]))
            yield can.Message(
                timestamp=dt.timestamp(),
                is_remote_frame=(True if dlc=='0' else False),
                is_extended_id=(True),
                is_error_frame=(False),
                arbitration_id=int(arbitration_id, base=16),
                dlc=int(dlc),
                data=(data if dlc!='0' else None),
                check=True
            )

        self.stop()


training_filenames = [
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_11_03_600554_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_12_02_778615_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_13_01_995553_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_14_01_213477_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_15_00_431179_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_15_59_634608_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_16_58_828128_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_17_58_001905_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_18_57_198424_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_19_56_400136_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_20_55_602416_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_21_54_811286_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_22_53_887541_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_23_53_085124_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_24_52_442638_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_25_51_772838_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_26_51_068837_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_27_50_340133_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_28_49_583673_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_29_48_854743_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_30_48_122172_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_31_47_396052_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_32_46_668090_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_33_45_860518_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_34_45_136631_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_35_44_916969_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_36_44_743770_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_37_44_122987_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_38_43_301819_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_39_42_558894_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_40_41_813371_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_41_41_075228_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_42_40_314591_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_43_39_531373_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_44_38_749345_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_45_37_974657_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_46_37_181616_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_47_36_409704_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_48_35_630889_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_49_34_833695_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_50_33_964979_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_51_32_864148_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_52_32_392879_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_53_31_499819_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_54_30_643057_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_55_29_829240_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_56_29_051575_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_57_28_450536_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_58_28_044336_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_13_59_27_574745_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_14_00_27_012099_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_14_01_26_539580_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_14_02_26_180494_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_14_03_25_575464_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_14_04_25_057171_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_14_05_24_619667_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_14_06_23_979033_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_14_07_23_539428_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_14_08_23_007943_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_14_09_22_554866_vehicle_normalized.csv',
'/home/alright/TURKU/thesis/ids/CAN_IDS_benchmark/src/data/can_vehicle_n/2021_06_22_14_10_22_089648_vehicle_normalized.csv',
        ]
